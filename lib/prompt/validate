#!/usr/bin/env sh

# DESCRIPTION
#  Internal subcommand for validating a prompt JSON payload based on the
#  SH41 conversation schema.
#
# ERROR CODES
#  1: Invalid input - parsing error of stdin, argument or flag parsing
#  2: Invalid JSON payload - validation error of the JSON payload against
#  the SH41 schema
#
# SEE ALSO
#  jq(1)

# ╭───┤ Functions 
# ╰─

log_error() {
  log --type error "$1" "$SH41_ICON sh41-prompt-validate"
}

# ╭───┤ Main
# ╰─

stdin_input=$(cat)
if [ -z "$stdin_input" ]; then
  log_error "No input provided, expected JSON payload via stdin"
  exit 1
fi

jq_validation='
  def typeError(field; expectedType): "Invalid type for field: " + field + ". Expected: " + expectedType;
  def notFoundError(key): "Missing field: " + key;
  def notExistsOrEmpty(field): if .[field] == null or .[field] == "" then true else false end;

  if notExistsOrEmpty("conversation_id") then
    notFoundError("conversation_id")
  elif (.conversation_id | type) != "string" then
    typeError("conversation_id"; "string")
  elif notExistsOrEmpty("messages") then
    notFoundError("messages")
  elif (.messages | type) != "array" then
    typeError("messages"; "array")
  else
    empty
  end'

error=$(printf "%s" "$stdin_input" \
  | jq --raw-output "$jq_validation")

if [ -n "$error" ]; then
  log_error "$error"
  exit 2
fi
