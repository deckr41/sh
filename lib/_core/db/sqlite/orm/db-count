#!/usr/bin/env sh

# NAME 
#  db-count - Count records in a table
#
# SYNOPSIS
#  db-count <table_name>
#   [-w|--where where_clause] 
#   [-m|--mode mode]
#
# DESCRIPTION
#  Count records in a table. 
#  By default all records are counted. Use the WHERE clause to count a
#  subset of records.
#
# ARGUMENTS
#  <table_name>
#   The table to query.
#
# OPTIONS
#  -w, --where [where_clause]
#   The WHERE clause to use when querying the database.
#
#  -m, --mode [mode="csv"] 
#   The display mode
#
# ERROR CODES
#  1: Missing environment variable
#  2: Invalid input - parsing error of stdin, argument or flag parsing
#
# ENVIRONMENT
#  SH41_DB_CONNECTION
#   Path to the database file. 
#
#  SH41_LIB
#   Path to SH41 internal lib directory.
#
# SEE ALSO
#  sqlite3(1), jq(1)

# ╭───┤ Shield wall!
# ╰─

if [ -z "$SH41_DB_CONNECTION" ]; then
  log error -v var_name "\$SH41_DB_CONNECTION" "Missing environment variable"
  exit 1
fi

if [ -z "$SH41_LIB" ]; then
  log error -v name "\$SH41_LIB" "Missing environment variable"
  exit 1
fi

# ╭───┤ Bootstrap
# ╰─

set -e
export LOG_NAMESPACE=" ssorm.count"

# shellcheck source=../../../../_core/fn/trap-debug
. "$SH41_LIB/_core/fn/trap-debug"
# shellcheck source=../../../../_core/fn/validation-utils
. "$SH41_LIB/_core/fn/validation-utils"

# ╭───┤ Input validation 
# ╰─

guard_missing_argument "<table>" "$1"
table="$1"; shift

while [ "$#" -gt 0 ]; do
  case $1 in
    -w|--where) 
      guard_missing_option_value "-w|--where" "$2"
      where=$2; shift
    ;;
    -m|--mode) 
      guard_missing_option_value "-m|--mode" "$2"
      mode=$2; shift
    ;;
    --) shift; break ;;
    -?*) log error -v name "$1" "Unknown parameter"; exit 2 ;;
    *) break ;;
  esac
  shift
done

# ╭───┤ Main
# ╰─

query="SELECT COUNT(*) as count FROM $table"

if [ -n "$where" ]; then
  query="$query WHERE $where"
fi

sqlite3 "$SH41_DB_CONNECTION" "-${mode:-csv}" "$query"
