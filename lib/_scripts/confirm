#!/usr/bin/env sh

# NAME
#  confirm - Fancy confirmation message powered by fzf
#
# SYNOPSIS
#  confirm [-hc|--has-cancel] [-nc|--no-confirm] <message>
#
# FLAGS 
#  [-hc|--has-cancel]
#   Add a "cancel" option to the confirmation message
#
#  [-nc|--no-confirm]
#   Do not ask for confirmation, return "yes" immediately
#
# ARGUMENTS
#  <message>
#   The question to ask for confirmation
#
# SEE ALSO
#  choose(1)

# ╭───┤ Argument parsing
# ╰─

delimiter="\n"
allow_cancel=""
no_confirm=""
options="󰔓 yes${delimiter}󰔑 no"

while [ "$#" -gt 0 ]; do
  case $1 in
    -nc|--no-confirm) 
      no_confirm="true" 
    ;;
    -hc|--has-cancel) 
      allow_cancel="true" 
      options="${options}${delimiter}󰁯 cancel"
    ;;
    -*) log -t error "Unknown parameter: $1" "confirm"; exit 1 ;;
    *) break ;;
  esac
  shift
done

# ╭───┤ Main
# ╰─

if [ -n "$no_confirm" ] || [ -n "$CI" ]; then
  printf "yes"
  exit 0
fi

# Check if user entered a custom answer and not selected from the list
is_custom_answer() {
  printf "%s" "$options" | grep --quiet --invert-match "$1"
}

answer=$(echo "$options" | choose --allow-custom --prompt "${1:-Confirm?}")

if [ -n "$answer" ] && ! is_custom_answer "$answer"; then
 answer=$(printf "%s" "$answer" | awk '{ print $2 }')
fi

if [ -z "$answer" ]; then
  [ -n "$allow_cancel" ] && printf "cancel" || printf "no"
  exit 1
fi

printf "%s" "$answer"

if [ "$answer" != "yes" ]; then
  exit 1
fi
