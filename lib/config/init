#!/usr/bin/env sh

# NAME
#  init - 
#
# SYNOPSIS
#  init [-hc|--health-check]
#
# ENVIRONMENT
#  SH41_CONFIG_HOME
#   Path to user's SH41 config directory.
#
#  SH41_CONFIG_RC 
#   Path to user's SH41 config file.
#
#  SH41_LIB
#   Path to SH41 internal lib directory.
#
# SEE ALSO
#  fc-match(1)

# ╭───┤ Shield wall!
# ╰─

if [ -z "$SH41_CONFIG_HOME" ]; then
  log error -v var_name "\$SH41_CONFIG_HOME" "Missing environment variable"
  exit 1
fi

if [ -z "$SH41_CONFIG_RC" ]; then
  log error -v var_name "\$SH41_CONFIG_RC" "Missing environment variable"
  exit 1
fi

if [ -z "$SH41_LIB" ]; then
  log error -v var_name "\$SH41_LIB" "Missing environment variable"
  exit 1
fi

# ╭───┤ Bootstrap
# ╰─

# log config
export LOG_NAMESPACE=" init"

# shellcheck source=../_fn/trap-debug
. "$SH41_LIB/_fn/trap-debug"

# ╭───┤ Functions
# ╰─

check_user() {
  if [ ! -e "$SH41_CONFIG_RC" ]; then
    log error -v "\$SH41_CONFIG_RC" "$SH41_CONFIG_RC" "Config file not found"
    return 2
  fi

  log success -v "\$SH41_CONFIG_RC" "$SH41_CONFIG_RC" "Config file exists"
}

configure_user() {
  mkdir -p "$(dirname "$SH41_CONFIG_RC")"

  cp "$SH41_HOME"/.sh41rc "$SH41_CONFIG_RC"
  cp "$SH41_HOME"/.env-example "$SH41_CONFIG_HOME/.env"
  echo ".env" > "$SH41_CONFIG_HOME/.gitignore"

  if [ -e "$SH41_CONFIG_RC" ]; then 
    log success -v "\$SH41_CONFIG_RC" "$SH41_CONFIG_RC" "Config files created"
  fi
}

check_emoji_support() {
  font_name=$(fc-match monospace | awk -F '"' '{print $2}')

  if ! echo "$font_name" | grep -q "Nerd"; then
    log warn -v font "$font_name" \
      "Nerd font not detected, some icons may not render correctly"
  fi

  log success -v font "$font_name" "Nerd font detected 󰱲"
}

check_dependencies() {
  dependencies="jq curl fzf bat"
  for dependency in $dependencies; do
    if ! command -v "$dependency" > /dev/null; then
      log error -v dependency "$dependency" "Dependency not found"
      has_error="true"
    fi
  done

  if [ -z "$has_error" ]; then
    log success \
      -v dependencies "$dependencies" \
      "All dependencies installed"
  fi
}

# ╭───┤ Input validation
# ╰─

SHOULD_INIT="true"

while [ "$#" -gt 0 ]; do
  case $1 in
    -hc|--health-check)
      SHOULD_INIT="" 
      export LOG_NAMESPACE=" init (health check)"
    ;;
    --) shift; break ;;
    -?*) log error "Unknown flag: $1"; exit 1 ;;
    *) break ;;
  esac
  shift
done

# ╭───┤ Main 
# ╰─

if ! check_user; then 
  [ "$SHOULD_INIT" = "true" ] && configure_user || exit 2
fi

check_emoji_support
check_dependencies

